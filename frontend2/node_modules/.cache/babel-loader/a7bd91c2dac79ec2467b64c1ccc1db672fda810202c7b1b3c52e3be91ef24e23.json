{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _react = require(\"react\");\nvar _react2 = _interopRequireDefault(_react);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar ImagePreview = function (_Component) {\n  _inherits(ImagePreview, _Component);\n  function ImagePreview(props) {\n    _classCallCheck(this, ImagePreview);\n    var _this = _possibleConstructorReturn(this, (ImagePreview.__proto__ || Object.getPrototypeOf(ImagePreview)).call(this, props));\n    _this.state = {\n      images: []\n    };\n    return _this;\n  }\n  _createClass(ImagePreview, [{\n    key: \"previewFiles\",\n    value: function previewFiles(event) {\n      var _this2 = this;\n      var fileNameRegEx = new RegExp(this.props.extensionRegex, this.props.extensionRegexFlags);\n      var files = event.target.files;\n      this.setState({\n        images: []\n      }, function () {\n        var readAndPreview = function readAndPreview(file) {\n          // Make sure `file.name` matches our extensions criteria\n          if (fileNameRegEx.test(file.name)) {\n            // Check the file size is under the limit\n            if (file.size <= _this2.props.maxFileSize) {\n              // Set the state of the component to reflect the new images array\n              _this2.setState(function (prevState, props) {\n                var newImages = prevState.images.concat([window.URL.createObjectURL(file)]);\n                _this2.props.onChange(newImages);\n                return {\n                  images: newImages\n                };\n              });\n            } else {\n              // Display error indicating file is too large\n              throw exceedMaxFileSizeError(file.name);\n            }\n          } else {\n            // Display error indicating unsupported file types\n            throw unsupportedTypeError(file.name);\n          }\n        };\n\n        // If there are files, run `readAndPreview` on each of them\n        if (files) {\n          [].forEach.call(files, readAndPreview);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      return _react2.default.createElement(\"div\", null, _react2.default.createElement(\"button\", {\n        label: \"Upload Images\"\n      }, _react2.default.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.previewFiles.bind(this),\n        multiple: true\n      })), _react2.default.createElement(\"div\", null, this.state.images.map(function (image) {\n        return _this3.props.wrapper(_react2.default.createElement(\"div\", {\n          key: image\n        }, _react2.default.createElement(\"img\", {\n          src: image\n        })));\n      })));\n    }\n  }]);\n  return ImagePreview;\n}(_react.Component);\nexports.default = ImagePreview;\nImagePreview.propTypes = {\n  wrapper: _react2.default.PropTypes.func,\n  extensionRegex: _react2.default.PropTypes.string,\n  extensionRegexFlags: _react2.default.PropTypes.string,\n  unsupportedTypeError: _react2.default.PropTypes.func,\n  exceedMaxFileSizeError: _react2.default.PropTypes.func,\n  maxFileSize: _react2.default.PropTypes.number,\n  onChange: _react2.default.PropTypes.func\n};\nImagePreview.defaultProps = {\n  wrapper: function wrapper(e) {\n    return e;\n  },\n  extensionRegex: '\\.(jpe?g|png)$',\n  extensionRegexFlags: 'i',\n  unsupportedTypeError: function unsupportedTypeError(filename) {\n    return new Error(filename + \" has an unsupported file type\");\n  },\n  exceedMaxFileSizeError: function exceedMaxFileSizeError(filename) {\n    return new Error(filename + \" is too large\");\n  },\n  maxFileSize: 5242880,\n  onChange: function onChange() {\n    return undefined;\n  }\n};\nmodule.exports = exports[\"default\"];","map":{"version":3,"names":["_react","require","ImagePreview","props","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","images","event","_this2","fileNameRegEx","RegExp","extensionRegex","extensionRegexFlags","files","target","setState","readAndPreview","file","test","name","size","maxFileSize","prevState","newImages","concat","window","URL","createObjectURL","onChange","exceedMaxFileSizeError","unsupportedTypeError","forEach","_this3","_react2","default","createElement","label","type","previewFiles","bind","multiple","map","image","wrapper","key","src","propTypes","PropTypes","func","string","number","defaultProps","e","filename","Error","undefined"],"sources":["C:\\Users\\rukun\\Desktop\\Dog_breeds\\frontend2\\node_modules\\react-image-preview\\src\\ImagePreview.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nexport default class ImagePreview extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      images: []\n    }\n  }\n\n  previewFiles(event) {\n\n    const fileNameRegEx = new RegExp(this.props.extensionRegex, this.props.extensionRegexFlags);\n    const files = event.target.files;\n\n    this.setState({\n      images: []\n    }, () => {\n      const readAndPreview = (file) => {\n\n        // Make sure `file.name` matches our extensions criteria\n        if (fileNameRegEx.test(file.name)) {\n\n          // Check the file size is under the limit\n          if (file.size <= this.props.maxFileSize) {\n\n            // Set the state of the component to reflect the new images array\n            this.setState((prevState, props) => {\n              const newImages = prevState.images.concat([window.URL.createObjectURL(file)]);\n              this.props.onChange(newImages);\n              return { images: newImages }\n            });\n          }\n          else {\n            // Display error indicating file is too large\n            throw exceedMaxFileSizeError(file.name);\n          }\n        }\n        else {\n          // Display error indicating unsupported file types\n          throw unsupportedTypeError(file.name);\n        }\n\n      }\n\n      // If there are files, run `readAndPreview` on each of them\n      if (files) {\n        [].forEach.call(files, readAndPreview);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <button label=\"Upload Images\">\n          <input type=\"file\" onChange={this.previewFiles.bind(this)} multiple />\n        </button>\n        <div>\n          {this.state.images.map((image) => (\n            this.props.wrapper(\n              <div key={image}>\n                <img src={image} />\n              </div>\n            )\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nImagePreview.propTypes = {\n  wrapper: React.PropTypes.func,\n  extensionRegex: React.PropTypes.string,\n  extensionRegexFlags: React.PropTypes.string,\n  unsupportedTypeError: React.PropTypes.func,\n  exceedMaxFileSizeError: React.PropTypes.func,\n  maxFileSize: React.PropTypes.number,\n  onChange: React.PropTypes.func,\n}\n\nImagePreview.defaultProps = {\n  wrapper: (e) => e,\n  extensionRegex: '\\.(jpe?g|png)$',\n  extensionRegexFlags: 'i',\n  unsupportedTypeError: (filename) => new Error(`${filename} has an unsupported file type`),\n  exceedMaxFileSizeError: (filename) => new Error(`${filename} is too large`),\n  maxFileSize: 5242880,\n  onChange: () => undefined\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}